{% set version = "0.3.1" %}

{% set cmake_args = "$CMAKE_ARGS" %}

package:
  name: fenics-pkgs
  version: {{ version }}

# {% set cmake_args = "$CMAKE_ARGS" %}  # [not win]

source:
  - url: https://github.com/FEniCS/ufl/archive/refs/heads/main.zip
    folder: ufl
  - url: https://github.com/FEniCS/basix/archive/refs/heads/main.zip
    folder: basix
  - url: https://github.com/FEniCS/ffcx/archive/refs/heads/main.zip
    folder: ffcx
  # - url: https://github.com/FEniCS/dolfinx/archive/refs/heads/main.zip
  #   folder: dolfinx
  - url: https://github.com/FEniCS/dolfinx/archive/refs/heads/conda-test.zip
    folder: dolfinx
  - url: https://github.com/garth-wells/ufcx/archive/refs/heads/main.zip
    folder: ufcx

  #  - url: https://github.com/FEniCS/ufl/archive/refs/tags/{{ version }}.tar.gz
  #    sha256: fe1832e2284f9c7fbd60421adc8bef05ba78a92c5ebc016839209fafaaead414
  #    folder: ufl
  #  - url: https://github.com/FEniCS/basix/archive/refs/heads/main.zip
  #    sha256: a7323f67b788f4fcd4dd5530f27d1325b75d43c87a71ebfa66aecbe1a0a52982
  #    folder: basix
  #  - url: https://github.com/FEniCS/ffcx/archive/refs/heads/main.zip
  #    sha256: f50c202b8bb3252a57c3bc5626ecbf664abcf9edd210a54961d3707cb6908340
  #    folder: ffcx
  #  - url: https://github.com/FEniCS/dolfinx/archive/f960aa1fd0184e82f34d1cd5bf7a7f581089fd01.zip
  #    sha256: b67c1f4ffc5f27252de1caa38611e7ca58eb83a58f3345ff1b3cdfd84e15f1ee
  #    folder: dolfinx

build:
  number: 0
  # skip: true  # [win or py<3.7]
  skip: true  # [ py<3.7]

requirements:
  build:
    # - python
    # - {{ compiler('cxx') }}
    # - ninja
    - cmake >=3.16
  host:
    - cmake >=3.16
    - numpy >=1.17,<1.21
  run:
    - numpy >=1.17,<1.21

outputs:
  - name: fenics-ufl
    version: {{ version }}
    build:
      noarch: python
      script: $PYTHON -m pip install --no-deps ./ufl
    requirements:
      host:
        - pip
        - python
      run:
        - numpy >=1.17,<1.21
        - python
        - setuptools
      test:
        source_files:
          - ufl/test
        requires:
          - pytest
        commands:
          - pytest -v ufl/test

  - name: fenics-libbasix
    version: {{ version }}
    build:
      script:
        - cmake -G Ninja -DCMAKE_BUILD_TYPE=Release {{ cmake_args }} -B build-dir -S ./basix/cpp
        - cmake --build build-dir --parallel
        - cmake --install build-dir
    requirements:
      build:
        - {{ compiler('cxx') }}
        - cmake
        - ninja
      host:
        - liblapack
        - libblas
        - xtensor
        - xtl
      run:
        - xtensor
        - xtl

  - name: fenics-basix
    version: {{ version }}
    build:
      script: $PYTHON -m pip install --no-deps ./basix/python
    requirements:
      build:
        - {{ compiler('cxx') }}
        - cmake
        - ninja
        - python
      host:
        - python
        - pip
        - numpy
        - pybind11
        - {{ pin_subpackage("fenics-libbasix", exact=True) }}
      run:
        - numba
        - numpy
        - python
        - {{ pin_subpackage("fenics-libbasix", exact=True) }}
    # test:
    #   source_files:
    #     - basix/test
    #   requires:
    #     - pytest
    #     - pytest-xdist
    #     - scipy
    #     - sympy
    #   commands:
    #     - pytest -v -n auto basix/test

  - name: ufcx
    version: {{ version }}
    build:
      noarch: generic
      script:
        - cmake {{ cmake_args }} -B ufcx-build-dir -S ./ufcx
        - cmake --build ufcx-build-dir
        - cmake --install -ufxc build-dir
    requirements:
      build:
        - {{ compiler('c') }}
        - cmake
    test:
      commands:
        - test -f $PREFIX/include/ufc.h

  - name: fenics-ffcx
    version: {{ version }}
    build:
      noarch:
        python
      script:
        - $PYTHON -m pip install --no-deps ./ffcx
    requirements:
      build:
        - python
        - pip
      host:
        - python
        - pip
      run:
        - {{ compiler("c") }}
        - python
        - numpy
        - cffi
        - pygraphviz
        - {{ pin_subpackage("fenics-basix", exact=True) }}
        - {{ pin_subpackage("fenics-ufl", exact=True) }}
    test:
      source_files:
        - ffcx/test
      requires:
        - pytest
        - pytest-xdist
        - sympy
        - ufcx
      commands:
        - pytest -v -n auto ffcx/test

  - name: fenics-libdolfinx
    version: {{ version }}
    build:
      {% set mpi_prefix = "mpi_" + mpi %}
      script:
        # - echo "---"
        # - echo "---"
        # - echo "---"
        # - echo "---"
        # - echo "*********************Start build steps"
        # - echo $PYTHON
        # - $PYTHON --version
        # - echo $CMAKE_ARGS
        # - echo {{ cmake_args }}
        # - $PYTHON -c "import ffcx.codegeneration as cg; import os, os.path; print(os.listdir(os.path.dirname(cg.__file__)))"
        - PETSC_DIR=$PREFIX cmake -G Ninja -DCMAKE_BUILD_TYPE=Debug {{ cmake_args }} -DPython3_EXECUTABLE="$PYTHON" -DUFC_INCLUDE_DIR=$PREFIX -B dolfinx-build-dir -S ./dolfinx/cpp
        - cmake --build dolfinx-build-dir --parallel
        - cmake --install dolfinx-build-dir
    requirements:
      build:
        - {{ compiler("c") }}
        - {{ compiler('cxx') }}
        # - python
        # - {{ pin_subpackage("fenics-ffcx", exact=True) }}
      host:
        - ninja
        - cmake
        # - python
        - {{ mpi }}
        - ufcx
        - libblas
        - liblapack
        - boost-cpp
        - parmetis
        - pkg-config
        - ptscotch
        - petsc >=3.16
        # - slepc
        - xtensor
        - xtl
        - {{ pin_subpackage("fenics-libbasix", exact=True) }}
        - {{ pin_subpackage("fenics-ffcx", exact=True) }}
        - hdf5 * mpi_{{ mpi }}_*
      run:
        - {{ compiler('cxx') }}
        - {{ mpi }}
        - boost-cpp
        - parmetis
        - petsc >=3.16
        # - slepc
        - pkgconfig
        - ptscotch
        - xtensor
        - xtl
        - zlib
        # - {{ pin_subpackage("fenics-ffcx", exact=True) }}
        - {{ pin_subpackage("fenics-libbasix", exact=True) }}


  # #  - name: fenics-dolfinx
  # #    version: {{ version }}
  # #    build:
  # #      script: ${RECIPE_DIR}/build-dolfinx.sh
  # #    requirements:
  # #      build:
  # #        - {{ compiler("c") }}
  # #        - {{ compiler('cxx') }}
  # #        - make
  # #        - cmake
  # #        - python=3.8
  # #        - pybind11
  # #      host:
  # #        - python=3.8
  # #        - fenics-basix
  # #        - fenics-ufl
  # #        - fenics-ffcx
  # #        - fenics-libdolfinx
  # #      run:
  # #        - python=3.8
  # #        - fenics-basix
  # #        - fenics-ufl
  # #        - fenics-ffcx
  # #        - fenics-libdolfinx
  # #        - numpy
  # #        - mpi4py
  # #        - petsc4py
  # #    test:
  # #      source_files:
  # #        - dolfinx/test
  # #      requires:
  # #        - pytest
  # #        - pytest-xdist
  # #      commands:
  # #        - pytest -v dolfinx/test

about:
  home: http://www.fenicsproject.org
  license: LGPL 3.0
  # license_file: dolfin/COPYING.LESSER
  summary: 'FEniCS is a collection of free software for automated, efficient solution of differential equations'

  description: |
    FEniCS is a collection of free software for automated, efficient solution of differential equations
    (<http://fenicsproject.org>). It provides C++ and Python interfaces, and creates effecient solvers via
    expression of finite variational statements in a domain-specific language that are transformed and
    just-in-time compiled into efficient implementations.
  doc_url: http://fenics.readthedocs.io/
  dev_url: https://github.com/FEniCS